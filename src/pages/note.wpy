<style lang="less">
.fixed {
  position: fixed;
  bottom: 20rpx;
  width: 100%;
  box-sizing: border-box;
}
</style>
<template>
  <view class="container">
    <repeat wx:if="{{!ThisPageIsEmpty}}" for="{{list}}" key="word_index" index="word_index" item="word">
        <demo-block title="{{word.word}}">
          <van-cell-group>
            <repeat for="{{word.meanings}}" key="meaning_index" index="meaning_index" item="meaning">
              <van-cell @tap="edit" data-_id="{{word._id}}" title="{{meaning_index+1}}. {{meaning}}" is-link="{{true}}"/>
            </repeat>
          </van-cell-group>
        </demo-block>
    </repeat>
    <view class="retract">
        <button @tap="deleteGroup" class="inline_btn_base" type='warn'>删除分组</button>
    </view> 
    <view class="retract fixed">
        <button @tap="goToAddWord" class="inline_btn_base">添加单词</button>
    </view> 
  </view>
</template>

<script>
import wepy from 'wepy';
import dict from '../cloud/dictionary';
import Utils from '../utils/utils';
export default class Note extends wepy.page {
  config = {
    navigationBarTitleText: 'note',
    usingComponents: {
      'demo-block': '../components/vant/demo-block',
      'van-cell': '../components/vant/cell',
      'van-cell-group': '../components/vant/cell-group'
    }
  };
  components = {};
  data = {
    list: []
  };

  computed = {
    ThisPageIsEmpty(){
      const list = this.list;
      return list.length===1&&list[0].word==null;
    }
  };

  methods = {
    edit(e) {
      const { _id } = e.currentTarget.dataset;
      /* 跳转到编辑页 */
      Utils.navi(`/pages/edit?rule=${JSON.stringify({_id})}&pageMode=meaning`);
    },
    goToAddWord(){
       Utils.navi(`/pages/edit?rule=${JSON.stringify(this.rule)}&pageMode=word`);
    },
    async deleteGroup(){
       const res = await dict.deleteGroup(this.rule);
       Utils.gobackWhenSuccess(res);
    }
  };

  events = {};
  onLoad(rule) {
    this.rule = rule;
    this.queryDict();
  }
  onShow() {
    this.queryDict();
  }
  async queryDict() {
    const data = await dict.where(this.rule);
    this.list = data;
    this.$apply();
  }
}
</script>
